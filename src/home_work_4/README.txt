========================================================================================================================
                                                      HOME WORK 4
========================================================================================================================

Класс DataContainer - хранилище объектов, реализованное на базе дженерика.

Класс ContainerMain1 - раннер для тестирования контейнера. Тип данных - Student из самостоятельной работы
                        (с доработками). Тестируются все методы по заданию.

Класс ContainerMain2 - раннер для тестирования контейнера. Тип данных - String. Пример скопирован из условия ДЗ 4.

Класс DataContainerIterator implements Iterator<T> - реализует методы интерфейса Iterator<T> (hasNext(), next()).
________________________________________________________________________________________________________________________

Описание методов класса DataContainer:

public DataContainer(T[] data) - конструктор класса, инициализирующий начальный массив элементов.

public int add(T item) - метод добавляет элемент в массив. Если в массиве нет мест, создается новый, большего объема.

public T get(int index) - метод возвращает элемент, расположенный под переданным индексом в массиве, либо null.

private boolean checkIndex(int index) - метод проверяет нахождение индекса в допустимом диапазоне значений. Возвращает
                        true - если индекс верный или false - если индекс неверный.

public T[] getItems() - возвращает массив элементов.

public boolean delete(int index) - удаляет элемент с указанным индексом.

public boolean delete(T item) - удаляет элемент по содержимому. Использует методы equals() объектов для поиска нужного
                        индекса и использует найденный индекс для передачи в метод delete(int index).

@Override
public String toString() - переопределенный метод, который генерирует строку с описанием содержимого контейнера.

public void sort(Comparator<T> comparator) - сортирует массив элементов шейкерным методом, используя переданный
                        компаратор.

public static <T extends Comparable<T>> void sort(DataContainer<T> dataContainer) - статический метод, который сортирует
                        переданный контейнер используя переопределенный метод сравнения в хранимых элементах.

public static <T extends Comparable<T>> void sort(DataContainer<T> dataContainer, Comparator<T> comparator) -
                        статический метод, который сортирует переданный контейнер используя переданный компаратор.

@Override
public Iterator<T> iterator() - реализация метода iterator() интерфейса Iterable<T>. возвращает экземпляр класса
                        DataContainerIterator.

Описание методов встроенного класса DataContainerIterator:

@Override
public boolean hasNext() - реализация метода интерфейса интерфейса Iterable<T> поиска следующего элемента массива.

@Override
public T next() - реализация метода интерфейса интерфейса Iterable<T> возвращения следующего элемента массива.
________________________________________________________________________________________________________________________